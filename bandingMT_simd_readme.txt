----------------------------------------------------------------

    バンディング低減MT SIMD ver17

            original idea by がらくたハウスのがらくた置き場様
                              (http://www.geocities.jp/flash3kyuu/)
                              
            高速化版 by rigaya

----------------------------------------------------------------

 bandingMT_simd.auf

  がらくたハウスのがらくた置き場様(http://www.geocities.jp/flash3kyuu/)の
  バンディング低減フィルタMTを勝手に高速化したものです。

  完全に手探りででっち上げたので、怪しいところもありますが、
  だいたい同じ効果が得られるかと。

  AVX512 / AVX2 / 128bit-AVX / SSE4.1 / SSSE3 / SSE2 / MMX で高速化されています。
  環境に合わせて、最速のものが自動的に選択されます。


【動作環境】

  Win 8.1/10/11 (x86/x64)
  Aviutl 1.00 以降


【注意事項】

  無保証です。自己責任で使用してください。
  このフィルタを使用したことによる、いかなる損害・トラブルについても責任を負いません。


【パラメータ】（初期設定は比較的強めです）

    ほぼオリジナルの説明のままですが、一部変更しています。

    ◇range
        ぼかす範囲です。
        この範囲内の近傍画素からサンプルを取り、ブラー処理を行います。
    
    ◇Y　Cb　Cr
        各成分の閾値です。
        この値が高いと階調飛びを減らす一方で、細かい線などが潰れます。

    ◇ditherY　ditherC
        sampleの設定値が、1〜2のときのみ反映されます。
        ブラー処理後に全体的に付加するディザの強度です。
        Aviutl上でのプレビューは最終出力するフォーマットよりも高精度なため、
        プレビュー時に階調飛びが目立たなくても、最終出力時に階調飛びが発生することがあります。
        最後までなるべくディザが残るように、圧縮効率とのバランスを取りながら設定する必要があります。

    ◇sample
        設定値：0
        周辺1画素を参照し、元の画素値を維持したまま処理を行います（ブラー処理を行わない）。
        中間階調を作らず、元の画素値がそのままディザ成分になるので、
        後段のフィルタで潰さない限り原理上バンディングは発生しませんが、
        ノイズ成分が増えやすいので、ソースの階調が比較的良好なときに使用します。
        処理はもっとも高速です。
        
        設定値：1
        周辺1画素とその点対称画素の計2画素を参照し、ブラー処理を行います。
        階調を滑らかにしすぎた場合は、
        ditherを強くして後段でのバンディングの発生を防いでください。

        設定値：2
        周辺2画素とその点対称画素の計4画素を参照し、ブラー処理を行います。
        階調を滑らかにしすぎた場合は、
        ditherを強くして後段でのバンディングの発生を防いでください。
        設定値：1と処理が異なるので閾値の変更が必要になります。

    ◇seed
        乱数生成時のシード値を変えます。
        通常必要ありません。
            
    ◇ブラー処理を先に
        sampleの設定値が、1〜2のときのみ反映されます。
        ブラー処理を先にすることでディザ強度を減らしつつ、階調飛びが多い素材での効果を上げます。
        全体的に副作用が強くなり細かい線が潰れやすくなります。
        ONとOFFでは処理が異なるので閾値の変更が必要になります。

    ◇毎フレーム乱数を生成
        毎フレームシード値を変更します。
        乱数を固定すると、うっすらと霞がかかったように見えるので、
        それを避けたい場合はこの設定を利用してください。

    ◇フィールド処理
        フィールド別で処理します。
  
  
【謝辞】

  素晴らしいプラグインを公開してくださっている、
  がらくたハウスのがらくた置き場様(http://www.geocities.jp/flash3kyuu/)
  に深く感謝いたします。


【更新メモ】
2018.02.11 (ver17+8)
 コンパイラをgcc 7.2.0に変更して高速化。
 AVX512に対応して、わずかに高速化。

2016.09.30 (ver17+7)
 キャッシュヒット率を向上させ、〜1.6倍程度高速化。

2014.06.25 (ver17+6)
 seed=0で横解像度が極めて小さい(21以下)のとき、エラーで落ちる可能性があったのを修正
 まあ幅21の動画なんて作らないと思うので、大丈夫だとは思うけれど、一応更新

2013.08.15 (ver17+5)
 +3〜+4でSSE2/SSSE3用コードにSSE4.1が混入していた問題を修正。
 
2013.08.09 (ver17+4)
 +3でのバグを修正。

2013.08.06 (ver17+3)
 大幅に改造
  - メモリ使用量を削減
  - 「毎フレーム乱数を生成」が速度に影響しないように
  - SSE2〜AVXコードを高速化
  - AVX2コードを追加し更に高速化

2013.02.07 (ver17+2)
 公開
 
2013.02.06
 MMX命令も使用し高速化(mode2)
 
2013.01.27 (ver17+1)
 MMX命令も使用し高速化(mode0, mode1)

2013.01.14 (ver17+0)
 SIMDバグ修正とか

2013.01.02
 縁の処理を見直し

2012.12.27
 乱数生成を並列化
 
2012.12.25
 とりあえずそれっぽいのができた
